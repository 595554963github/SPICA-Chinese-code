//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPICA.Rendering.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SPICA.Rendering.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 //SPICA auto-generated code
        /////This code was translated from a MAESTRO Vertex Shader
        /////This file was also hand modified to improve compatibility
        ///#version 330 core
        ///
        ///uniform vec4 WrldMtx[3];
        ///uniform vec4 NormMtx[3];
        ///uniform vec4 PosOffs;
        ///uniform vec4 IrScale[2];
        ///uniform vec4 TexcMap;
        ///uniform vec4 TexMtx0[3];
        ///uniform vec4 TexMtx1[3];
        ///uniform vec4 TexMtx2[2];
        ///uniform vec4 TexTran;
        ///uniform vec4 MatAmbi;
        ///uniform vec4 MatDiff;
        ///uniform vec4 HslGCol;
        ///uniform vec4 HslSCol;
        ///uniform vec4 HslSDir;
        ///uniform vec4 UnivReg[60 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string DefaultVertexShader {
            get {
                return ResourceManager.GetString("DefaultVertexShader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 #version 150
        ///#extension GL_ARB_gpu_shader5 : require
        ///
        ///uniform sampler2D LUTs[6];
        ///
        ///uniform sampler2D Textures[3];
        ///
        ///uniform sampler2D LightDistanceLUT[3];
        ///
        ///uniform sampler2D LightAngleLUT[3];
        ///
        ///uniform samplerCube TextureCube;
        ///
        ///struct Light_t {
        ///	vec3 Position;
        ///	vec3 Direction;
        ///	vec4 Ambient;
        ///	vec4 Diffuse;
        ///	vec4 Specular0;
        ///	vec4 Specular1;
        ///	float AttScale;
        ///	float AttBias;
        ///	float AngleLUTScale;
        ///	int AngleLUTInput;
        ///	int SpotAttEnb;
        ///	int DistAttEnb;
        ///	int TwoSidedDiff;
        ///	int Directional;
        ///};
        ///
        ///uniform int LightsCount [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string FragmentShaderBase {
            get {
                return ResourceManager.GetString("FragmentShaderBase", resourceCulture);
            }
        }
    }
}
